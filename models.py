from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()


class UserConfig(db.Model):
    __tablename__ = "user_config"

    id = db.Column(db.Integer, primary_key=True)
    api_key = db.Column(db.String(128))
    site_id = db.Column(db.String(64))
    solar_kw = db.Column(db.Float, default=0.0)
    battery_kwh = db.Column(db.Float, default=0.0)

    def __repr__(self):
        return f"<UserConfig id={self.id} site={self.site_id}>"


class Interval(db.Model):
    __tablename__ = "interval"

    id = db.Column(db.Integer, primary_key=True)
    ts = db.Column(db.DateTime, unique=True, index=True)
    import_kwh = db.Column(db.Float, default=0.0)
    export_kwh = db.Column(db.Float, default=0.0)
    import_price = db.Column(db.Float, default=0.0)
    export_price = db.Column(db.Float, default=0.0)
    cost = db.Column(db.Float, default=0.0)

    def __repr__(self):
        return f"<Interval {self.ts} imp={self.import_kwh:.2f} exp={self.export_kwh:.2f} cost={self.cost:.2f}>"


class Agg(db.Model):
    """
    Aggregated daily totals for usage, export, and cost.
    Generated by fetcher._update_aggregates() after every pull.
    """
    __tablename__ = "agg"

    id = db.Column(db.Integer, primary_key=True)
    date = db.Column(db.Date, unique=True, index=True)
    import_kwh = db.Column(db.Float, default=0.0)
    export_kwh = db.Column(db.Float, default=0.0)
    cost = db.Column(db.Float, default=0.0)

    def __repr__(self):
        return f"<Agg {self.date} imp={self.import_kwh:.2f} exp={self.export_kwh:.2f} cost={self.cost:.2f}>"
